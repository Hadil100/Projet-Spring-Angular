package com.example.evenment.controller;


import com.example.evenment.dao.EventRepository;
import com.example.evenment.entity.Evenement;
import com.example.evenment.service.EventServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Optional;

@RestController

public class EvenementRestController {

    @Autowired

    private EventServiceImpl eventService;

    @GetMapping("/evenements")
    public List<Evenement> getAllEvenements() {
        return eventService.getAllEvents();
    }

    @GetMapping("/evenement/{id}")
    public Evenement getEvenementById(@PathVariable Long id) {
    return eventService.getEventById(id);
    }



    @PostMapping("/evenements/evenement")
    public Evenement CreateEvenement(@RequestBody Evenement evenement) {
       return eventService.createEvent(evenement);

    }
    

    @PutMapping("/events/{id}")
    public Evenement UpdateEvenement(@PathVariable Long id) {
    	Evenement evenement = eventService.getEventById(id);
       return eventService.updateEvent(id, evenement);
    }
    
    
    @DeleteMapping("events/{id}/delete")
    public ResponseEntity<String> deleteEvenement(@PathVariable Long id) {
        Optional<Evenement> evenementOptional = eventService.getEventByIdOptional(id);

        if (evenementOptional.isPresent()) {
            eventService.deleteEvent(id);
            return new ResponseEntity<>("Evenement supprimé avec succès.", HttpStatus.OK);
        } else {
            return new ResponseEntity<>("Evenement non trouvé.", HttpStatus.NOT_FOUND);
        }
    }
}
